<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/rabbit
	   http://www.springframework.org/schema/rabbit/spring-rabbit-1.4.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd"
	default-lazy-init="true">
		
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="minIdle" value="1" />
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxActive}" />
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="5000"/>
		<property name="numTestsPerEvictionRun" value="10"/>
		<property name="minEvictableIdleTimeMillis" value="2000"/>
		<property name="blockWhenExhausted" value="${redis.blockWhenExhausted}" />
	</bean>

	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<!-- IP地址 -->
		<property name="hostName" value="${redis.host}" />
		<!-- 端口号 -->
		<property name="port" value="${redis.port}" />
		<!-- 超时时间 默认2000-->
		<property name="timeout" value="${redis.timeout}" />
		<!-- 连接池配置引用 -->
		<property name="poolConfig" ref="jedisPoolConfig" />
		<!-- usePool：是否使用连接池 -->
		<property name="usePool" value="true"/>
        <property name="password" value="${redis.passwd}" />
	</bean>

    <!-- redis template definition -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
            <!--<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />-->
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
        <!--开启事务  -->
        <property name="enableTransactionSupport" value="false"/>
    </bean>

    <!--自定义redis工具类,在需要缓存的地方注入此类  -->
    <bean id="redisCacheManager" class="com.huawei.manager.RedisCacheManager">
        <property name="redisTemplate" ref="redisTemplate" />
    </bean>
</beans>  